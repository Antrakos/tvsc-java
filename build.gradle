buildscript {
    repositories {
        mavenCentral()
//        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-SNAPSHOT'
    }
}
plugins {
    id "me.champeau.gradle.jmh" version "0.3.1"
}
group 'TV Series Compaion'
ext {
    spring_context = "org.springframework:spring-context:$spring_version"
    spring_orm = "org.springframework:spring-orm:$spring_version"
    spring_test = "org.springframework:spring-test:$spring_version"
    spring_mvc = "org.springframework:spring-webmvc:$spring_version"
    spring_rest_docs = "org.springframework.restdocs:spring-restdocs-mockmvc:$spring_rest_docs_version"
//    apache_commons_lang = "org.apache.commons:commons-lang3:$apache_commons_lang_version"
//    apache_commons_collections4 = "org.apache.commons:commons-collections4:$apache_commons_collections_version"
    guava = "com.google.guava:guava:$guava_version"
    project_lombok = "org.projectlombok:lombok:$project_lombok_version"
    jackson_core = "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    jackson_annotations = "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    jackson_databind = "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    jackson_datatype_jsr310 = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    gson = "com.google.code.gson:gson:$gson_version"
    postgres = "org.postgresql:postgresql:$postgres_version"
    hsqldb = "org.hsqldb:hsqldb:$hsqldb_version"
    http_client = "org.apache.httpcomponents:httpclient:$http_client_version"
    async_http_client = "org.asynchttpclient:async-http-client:$async_http_client_version"
    okhttp3 = "com.squareup.okhttp3:okhttp:$okhttp3_version"
    apache_commons_io = "commons-io:commons-io:$apache_commons_io_version"
    kotlin = "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    slf4j = "org.slf4j:slf4j-api:$slf4j_version"
    log4j2 = "org.apache.logging.log4j:log4j-core:$log4j2_version"
    log4j_jul = "org.apache.logging.log4j:log4j-jul:$log4j2_version"
    slf4j_log4j2_binding = "org.apache.logging.log4j:log4j-slf4j-impl:$slf4j_log4j2_binding_version"
    jcl_over_slf4j = "org.slf4j:jcl-over-slf4j:$jcl_over_slf4j_version"
    junit_jupiter_api = "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    junit_platform_runner = "org.junit.platform:junit-platform-runner:$junit_platform_version"
    junit_jupiter_engine = "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    spring_test_junit5 = files('libs/spring-test-junit5-1.0.0-SNAPSHOT.jar')
    hamcrest = "org.hamcrest:hamcrest-all:$hamcrest_version"
    mockito = "org.mockito:mockito-all:$mockito_version"
    modelmapper = "org.modelmapper:modelmapper:$modelmapper_version"
    groovy = "org.codehaus.groovy:groovy-all:$groovy_version"
    spock = "org.spockframework:spock-core:$spock_version"
    spock_spring = "org.spockframework:spock-spring:$spock_version"
    cglib = "cglib:cglib-nodep:$cglib_version"
    objenesis = "org.objenesis:objenesis:$objenesis_version"
    servlet_api = "javax.servlet:javax.servlet-api:$servlet_api_version"
    spring_boot_starter_log4j2 = "org.springframework.boot:spring-boot-starter-log4j2:$spring_boot_version"
    spring_boot_starter_web = "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"
    spring_boot_starter_actuator = "org.springframework.boot:spring-boot-starter-actuator:$spring_boot_version"
    spring_boot_starter_hateoas = "org.springframework.boot:spring-boot-starter-hateoas:$spring_boot_version"
    spring_boot_starter_jdbc = "org.springframework.boot:spring-boot-starter-jdbc:$spring_boot_version"
    logging_list = [slf4j, log4j2, slf4j_log4j2_binding, jcl_over_slf4j]
    jackson_list = [jackson_core, jackson_databind, jackson_datatype_jsr310]
    junit_list = [junit_jupiter_api, junit_jupiter_engine, junit_platform_runner, spring_test_junit5, log4j_jul]
}
subprojects {
    apply plugin: 'java'
//    apply plugin: 'org.junit.platform.gradle.plugin'
    apply plugin: 'kotlin'
    apply plugin: 'groovy'
    sourceCompatibility = sourceComp

    repositories {
        mavenCentral()
//        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        testCompile spring_test, hamcrest, mockito, hsqldb//, junit_list
        testCompile groovy
        testCompile(spock) {
            exclude group: 'org.codehaus.groovy'
        }
        testCompile(spock_spring) {
            exclude group: 'org.spockframework'
            exclude group: 'org.codehaus.groovy'
        }
        testRuntime cglib, objenesis
    }
    configurations.compile.exclude group: 'commons-logging'
    configurations.compile.exclude module: 'logback-classic'
}